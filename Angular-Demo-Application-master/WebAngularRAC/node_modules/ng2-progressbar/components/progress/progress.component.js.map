{"version":3,"file":"progress.component.js","sourceRoot":"","sources":["../../inlined/components/progress/progress.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, Input, ChangeDetectionStrategy, ViewEncapsulation, OnChanges, SimpleChanges, OnDestroy\n} from '@angular/core';\nimport { NgProgressService } from '../../service/progress.service';\n\n\n\nexport class ProgressComponent implements OnChanges, OnDestroy {\n\n  progress: NgProgressService;\n  /** Progress options  */\n   ease = 'linear';\n   positionUsing = 'margin';\n   showSpinner = true;\n   direction = 'leftToRightIncreased';\n   color = '#CC181E';\n   thick = false;\n   maximum = 1;\n   minimum = 0.08;\n   speed = 200;\n   trickleSpeed = 300;\n  /** Start/Stop Progressbar */\n   toggle;\n\n  constructor(progress: NgProgressService) {\n    this.progress = progress;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n\n    let minChng = changes['minimum'];\n    let maxChng = changes['maximum'];\n    let spdChng = changes['speed'];\n    let tklSpdChng = changes['trickleSpeed'];\n    let tglChng = changes['toggle'];\n\n    if (minChng) {\n      if (typeof minChng.currentValue !== 'undefined' && minChng.currentValue !== minChng.previousValue) {\n        if (minChng.currentValue < 0 || minChng.currentValue > 1) {\n          throw 'Input [minimum] must be between 0 and 1';\n        } else {\n          this.progress.minimum = minChng.currentValue;\n        }\n      }\n    }\n\n    if (maxChng) {\n      if (typeof maxChng.currentValue !== 'undefined' && maxChng.currentValue !== maxChng.previousValue) {\n        if (maxChng.currentValue < 0 || maxChng.currentValue > 1) {\n          throw 'Input [maximum] must be between 0 and 1';\n        } else {\n          this.progress.maximum = maxChng.currentValue;\n        }\n      }\n    }\n\n    if (spdChng) {\n      if (typeof spdChng.currentValue !== 'undefined' && spdChng.currentValue !== spdChng.previousValue) {\n        this.progress.speed = spdChng.currentValue;\n      }\n    }\n\n    if (tklSpdChng) {\n      if (typeof tklSpdChng.currentValue !== 'undefined' && tklSpdChng.currentValue !== tklSpdChng.previousValue) {\n        this.progress.trickleSpeed = tklSpdChng.currentValue;\n      }\n    }\n\n    if (tglChng) {\n      if (typeof tglChng.currentValue !== 'undefined' && tglChng.currentValue !== tglChng.previousValue) {\n        if (tglChng.currentValue) {\n          this.progress.start();\n        } else {\n          this.progress.done();\n        }\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.progress.state.unsubscribe();\n    this.progress.trickling.unsubscribe();\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-progress',\n  template: \"\\n    <ng-progress-bar\\n      [speed]=\\\"speed\\\"\\n      [positionUsing]=\\\"positionUsing\\\"\\n      [ease]=\\\"ease\\\"\\n      [showSpinner]=\\\"showSpinner\\\"\\n      [direction]=\\\"direction\\\"\\n      [color]=\\\"color\\\"\\n      [thick]=\\\"thick\\\"\\n      [state]=\\\"progress.state | async\\\"\\n    ></ng-progress-bar>\\n  \",\n  styles: [\"\\n    :host {\\n      pointer-events: none;\\n      position: relative;\\n      z-index: 65535;\\n    }\\n\\n    .ng-progress {\\n      z-index: 1031;\\n      top: 0;\\n      left: 0;\\n      width: 100%;\\n      position: fixed;\\n      zoom: 1;\\n      filter: alpha(opacity=0);\\n      opacity: 0;\\n      transition: opacity 200ms linear;\\n    }\\n\\n    .active {\\n      filter: alpha(opacity=100);\\n      opacity: 1;\\n      transition: none;\\n    }\\n\\n    .bar {\\n      position: absolute;\\n      width: 100%;\\n      height: 2px;\\n    }\\n\\n    .thick .bar {\\n      height: 3px;\\n    }\\n\\n    .bar-shadow {\\n      display: block;\\n      position: absolute;\\n      right: 0;\\n      top: -3px;\\n      width: 100px;\\n      height: 100%;\\n      opacity: 1.0;\\n      -webkit-transform: rotate(3deg);\\n      -ms-transform: rotate(3deg);\\n      transform: rotate(3deg);\\n    }\\n\\n\\n    .thick .bar-shadow {\\n      top: -4px;\\n      -webkit-transform: rotate(4deg);\\n      -ms-transform: rotate(4deg);\\n      transform: rotate(4deg);\\n    }\\n\\n    .thick .spinner-icon {\\n      width: 24px;\\n      height: 24px;\\n      border: solid 3px transparent;\\n    }\\n\\n    /* Remove these to get rid of the spinner */\\n    .spinner {\\n      display: block;\\n      position: fixed;\\n      z-index: 1031;\\n      top: 15px;\\n      right: 15px;\\n    }\\n\\n    .spinner-icon {\\n      width: 18px;\\n      height: 18px;\\n      box-sizing: border-box;\\n\\n      border: solid 2px transparent;\\n      border-radius: 50%;\\n\\n      -webkit-animation: nprogress-spinner 400ms linear infinite;\\n      animation: nprogress-spinner 400ms linear infinite;\\n    }\\n\\n    .anti-clockwise .spinner-icon {\\n      -webkit-animation-direction: reverse;\\n      animation-direction: reverse;\\n    }\\n\\n    @-webkit-keyframes nprogress-spinner {\\n      0% {\\n        -webkit-transform: rotate(0deg);\\n      }\\n      100% {\\n        -webkit-transform: rotate(360deg);\\n      }\\n    }\\n\\n    @keyframes nprogress-spinner {\\n      0% {\\n        transform: rotate(0deg);\\n      }\\n      100% {\\n        transform: rotate(360deg);\\n      }\\n    }\\n  \"],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: NgProgressService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'ease': [{ type: Input },],\n'positionUsing': [{ type: Input },],\n'showSpinner': [{ type: Input },],\n'direction': [{ type: Input },],\n'color': [{ type: Input },],\n'thick': [{ type: Input },],\n'maximum': [{ type: Input },],\n'minimum': [{ type: Input },],\n'speed': [{ type: Input },],\n'trickleSpeed': [{ type: Input },],\n'toggle': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}