{"version":3,"file":"watcher-helper.js","sourceRoot":"","sources":["watcher-helper.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;GAWG;;AAEH,qBAEO,eAAe,CAAC,CAAA;AAGvB;IAAA;QACY,cAAS,GAAU,EAAE,CAAC;IA+DlC,CAAC;IA7DG,sCAAc,GAAd;QAAA,iBA8BC;QA7BG,IAAI,WAAW,GAAG,UAAC,WAAW,EAAE,mBAAmB,EAAE,OAAO;YACxD,IAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;YAC7B,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;YAExB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;gBACzB,mBAAmB,CAAC,QAAQ,CAAC,CAAC;YAClC,CAAC;YAED,IAAI,OAAO,GAAG;gBACV,IAAI,QAAQ,GAAG,WAAW,EAAE,CAAC;gBAE7B,EAAE,CAAC,CAAC,KAAI,CAAC,kBAAkB,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAC5D,mBAAmB,CAAC,QAAQ,CAAC,CAAC;oBAC9B,QAAQ,GAAG,QAAQ,CAAC;gBACxB,CAAC;YACL,CAAC,CAAC;YAEF,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE7B,MAAM,CAAC;gBACH,IAAI,KAAK,GAAG,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;gBAE5C,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;oBACf,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACpC,CAAC;YACL,CAAC,CAAC;QACN,CAAC,CAAC;QAEF,MAAM,CAAC,WAAW,CAAC;IACvB,CAAC;IAEO,0CAAkB,GAA1B,UAA2B,QAAa,EAAE,QAAa,EAAE,SAAkB;QACvE,IAAI,cAAc,GAAG,QAAQ,YAAY,MAAM,IAAI,QAAQ,YAAY,MAAM,EACzE,YAAY,GAAG,QAAQ,YAAY,IAAI,IAAI,QAAQ,YAAY,IAAI,CAAC;QAExE,EAAE,CAAC,CAAC,SAAS,IAAI,cAAc,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC/C,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACxD,CAAC;QACD,MAAM,CAAC,QAAQ,KAAK,QAAQ,CAAC;IACjC,CAAC;IAEO,2CAAmB,GAA3B,UAA4B,kBAA0B,EAAE,gBAAwB;QAC5E,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,kBAAkB,CAAC,CAAC,CAAC;YACnC,EAAE,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,IAAI,kBAAkB,CAAC,KAAK,CAAC,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC7G,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;QACL,CAAC;IACL,CAAC;IAED,qCAAa,GAAb;QACG,GAAG,CAAC,CAAgB,UAAc,EAAd,KAAA,IAAI,CAAC,SAAS,EAAd,cAAc,EAAd,IAAc,CAAC;YAA9B,IAAI,OAAO,SAAA;YACX,OAAO,EAAE,CAAC;SACb;IACL,CAAC;IACE,wBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,iBAAU,EAAE;KACnB,CAAC;IAEK,4BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACF,oBAAC;AAAD,CAAC,AAhED,IAgEC;AAhEY,qBAAa,gBAgEzB,CAAA","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.1.3\n * Build date: Thu May 18 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\nimport {\r\n    Injectable\r\n} from '@angular/core';\r\n\r\n\r\nexport class WatcherHelper {\r\n    private _watchers: any[] = [];\r\n\r\n    getWatchMethod() {\r\n        let watchMethod = (valueGetter, valueChangeCallback, options) => {\r\n            let oldValue = valueGetter();\r\n            options = options || {};\r\n\r\n            if (!options.skipImmediate) {\r\n                valueChangeCallback(oldValue);\r\n            }\r\n\r\n            let watcher = () => {\r\n                let newValue = valueGetter();\r\n\r\n                if (this._isDifferentValues(oldValue, newValue, options.deep)) {\r\n                    valueChangeCallback(newValue);\r\n                    oldValue = newValue;\r\n                }\r\n            };\r\n\r\n            this._watchers.push(watcher);\r\n\r\n            return () => {\r\n                let index = this._watchers.indexOf(watcher);\r\n\r\n                if (index !== -1) {\r\n                    this._watchers.splice(index, 1);\r\n                }\r\n            };\r\n        };\r\n\r\n        return watchMethod;\r\n    }\r\n\r\n    private _isDifferentValues(oldValue: any, newValue: any, deepCheck: boolean) {\r\n        let isObjectValues = newValue instanceof Object && oldValue instanceof Object,\r\n            isDateValues = oldValue instanceof Date && newValue instanceof Date;\r\n\r\n        if (deepCheck && isObjectValues && !isDateValues) {\r\n            return this._checkObjectsFields(newValue, oldValue);\r\n        }\r\n        return oldValue !== newValue;\r\n    }\r\n\r\n    private _checkObjectsFields(checkingFromObject: Object, checkingToObject: Object) {\r\n        for (let field in checkingFromObject) {\r\n            if (checkingFromObject[field] > checkingToObject[field] || checkingFromObject[field] < checkingToObject[field]) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n\r\n    checkWatchers() {\r\n       for (let watcher of this._watchers) {\r\n            watcher();\r\n        }\r\n    }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}