{"version":3,"file":"field-panel.js","sourceRoot":"","sources":["field-panel.ts"],"names":[],"mappings":"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","sourcesContent":["/*!\n * devextreme-angular\n * Version: 17.1.3\n * Build date: Thu May 18 2017\n *\n * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-angular\n */\n\n\r\nimport {\r\n    Component,\r\n    NgModule,\r\n    Host,\r\n    SkipSelf,\r\n    Input\r\n} from '@angular/core';\r\n\r\nimport { NestedOptionHost } from '../../core/nested-option';\r\nimport { NestedOption } from '../../core/nested-option';\r\n\r\n\r\n\r\nexport class DxoFieldPanelComponent extends NestedOption {\r\n    \r\n    get allowFieldDragging() {\r\n        return this._getOption('allowFieldDragging');\r\n    }\r\n    set allowFieldDragging(value: any) {\r\n        this._setOption('allowFieldDragging', value);\r\n    }\r\n\r\n    \r\n    get showColumnFields() {\r\n        return this._getOption('showColumnFields');\r\n    }\r\n    set showColumnFields(value: any) {\r\n        this._setOption('showColumnFields', value);\r\n    }\r\n\r\n    \r\n    get showDataFields() {\r\n        return this._getOption('showDataFields');\r\n    }\r\n    set showDataFields(value: any) {\r\n        this._setOption('showDataFields', value);\r\n    }\r\n\r\n    \r\n    get showFilterFields() {\r\n        return this._getOption('showFilterFields');\r\n    }\r\n    set showFilterFields(value: any) {\r\n        this._setOption('showFilterFields', value);\r\n    }\r\n\r\n    \r\n    get showRowFields() {\r\n        return this._getOption('showRowFields');\r\n    }\r\n    set showRowFields(value: any) {\r\n        this._setOption('showRowFields', value);\r\n    }\r\n\r\n    \r\n    get texts() {\r\n        return this._getOption('texts');\r\n    }\r\n    set texts(value: any) {\r\n        this._setOption('texts', value);\r\n    }\r\n\r\n    \r\n    get visible() {\r\n        return this._getOption('visible');\r\n    }\r\n    set visible(value: any) {\r\n        this._setOption('visible', value);\r\n    }\r\n\r\n    protected get _optionPath() {\r\n        return 'fieldPanel';\r\n    }\r\n\r\n\r\n\r\n    constructor(  parentOptionHost: NestedOptionHost,  optionHost: NestedOptionHost) {\r\n        super();\r\n        parentOptionHost.setNestedOption(this);\r\n        optionHost.setHost(this, this._fullOptionPath.bind(this));\r\n    }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\r\n    selector: 'dxo-field-panel',\r\n    template: '',\r\n    styles: [''],\r\n    providers: [NestedOptionHost]\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }, ]},\n{type: NestedOptionHost, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'allowFieldDragging': [{ type: Input },],\n'showColumnFields': [{ type: Input },],\n'showDataFields': [{ type: Input },],\n'showFilterFields': [{ type: Input },],\n'showRowFields': [{ type: Input },],\n'texts': [{ type: Input },],\n'visible': [{ type: Input },],\n};\n}\r\n\r\n\r\nexport class DxoFieldPanelModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\r\n  declarations: [\r\n    DxoFieldPanelComponent\r\n  ],\r\n  exports: [\r\n    DxoFieldPanelComponent\r\n  ],\r\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}