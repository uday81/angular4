/*!
 * devextreme-angular
 * Version: 17.1.3
 * Build date: Thu May 18 2017
 *
 * Copyright (c) 2012 - 2017 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var core_1 = require('@angular/core');
var nested_option_1 = require('../../core/nested-option');
var format_1 = require('./base/format');
var DxoArgumentFormatComponent = (function (_super) {
    __extends(DxoArgumentFormatComponent, _super);
    function DxoArgumentFormatComponent(parentOptionHost, optionHost) {
        _super.call(this);
        parentOptionHost.setNestedOption(this);
        optionHost.setHost(this, this._fullOptionPath.bind(this));
    }
    Object.defineProperty(DxoArgumentFormatComponent.prototype, "_optionPath", {
        get: function () {
            return 'argumentFormat';
        },
        enumerable: true,
        configurable: true
    });
    DxoArgumentFormatComponent.decorators = [
        { type: core_1.Component, args: [{
                    selector: 'dxo-argument-format',
                    template: '',
                    styles: [''],
                    providers: [nested_option_1.NestedOptionHost],
                    inputs: [
                        'currency',
                        'formatter',
                        'parser',
                        'precision',
                        'type'
                    ]
                },] },
    ];
    DxoArgumentFormatComponent.ctorParameters = function () { return [
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.SkipSelf }, { type: core_1.Host },] },
        { type: nested_option_1.NestedOptionHost, decorators: [{ type: core_1.Host },] },
    ]; };
    return DxoArgumentFormatComponent;
}(format_1.DxoFormat));
exports.DxoArgumentFormatComponent = DxoArgumentFormatComponent;
var DxoArgumentFormatModule = (function () {
    function DxoArgumentFormatModule() {
    }
    DxoArgumentFormatModule.decorators = [
        { type: core_1.NgModule, args: [{
                    declarations: [
                        DxoArgumentFormatComponent
                    ],
                    exports: [
                        DxoArgumentFormatComponent
                    ],
                },] },
    ];
    DxoArgumentFormatModule.ctorParameters = function () { return []; };
    return DxoArgumentFormatModule;
}());
exports.DxoArgumentFormatModule = DxoArgumentFormatModule;
//# sourceMappingURL=argument-format.js.map